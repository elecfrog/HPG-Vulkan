#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 256) in;

layout(set = 0, binding = 0) buffer InputBuffer {
    vec3 inputData[];
};

layout(set = 0, binding = 1) buffer OutputBuffer {
    float meshDensity[];
};

vec3 triangleArea(vec3 a, vec3 b, vec3 c) {
    vec3 ab = b - a;
    vec3 ac = c - a;
    return cross(ab, ac);
}

void main() {
    uint globalId = gl_GlobalInvocationID.x;
    uint triangleIndex = globalId / 3;

    if (globalId % 3 == 0) {
        vec3 a = inputData[globalId];
        vec3 b = inputData[globalId + 1];
        vec3 c = inputData[globalId + 2];
        meshDensity[triangleIndex] = length(triangleArea(a, b, c)) * 0.5;
    }
}